{
  "$schema": "node_modules/wrangler/config-schema.json",
  "name": "nixos-modules-api",
  "main": "src/index.ts",
  "compatibility_date": "2025-03-07",
  "compatibility_flags": ["nodejs_compat"],

  // Observability configuration for monitoring
  "observability": {
    "enabled": true,
    "head_sampling_rate": 1
  },

  // D1 Database binding for module storage
  "d1_databases": [
    {
      "binding": "MODULES_DB",
      "database_name": "nixos-modules",
      "database_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
      "preview_database_id": "preview-xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
    }
  ],

  // KV Namespace for caching
  "kv_namespaces": [
    {
      "binding": "MODULE_CACHE",
      "id": "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
      "preview_id": "preview-xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"
    },
    {
      "binding": "VERSION_CACHE",
      "id": "yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy",
      "preview_id": "preview-yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy"
    }
  ],

  // Analytics Engine for metrics collection
  "analytics_engine_datasets": [
    {
      "binding": "MODULE_ANALYTICS",
      "dataset": "module_analytics"
    }
  ],

  // Rate limiting configuration
  "ratelimits": [
    {
      "name": "API_RATE_LIMITER",
      "namespace_id": "1001",
      "simple": {
        "limit": 100,
        "period": 60
      }
    },
    {
      "name": "SEARCH_RATE_LIMITER",
      "namespace_id": "1002",
      "simple": {
        "limit": 30,
        "period": 60
      }
    },
    {
      "name": "WRITE_RATE_LIMITER",
      "namespace_id": "1003",
      "simple": {
        "limit": 10,
        "period": 60
      }
    }
  ],

  // R2 bucket for backups and exports
  "r2_buckets": [
    {
      "binding": "BACKUP_BUCKET",
      "bucket_name": "nixos-modules-backups",
      "preview_bucket_name": "nixos-modules-backups-preview"
    }
  ],

  // Durable Objects for WebSocket connections and state management
  "durable_objects": {
    "bindings": [
      {
        "name": "WEBSOCKET_HANDLER",
        "class_name": "WebSocketHandler"
      },
      {
        "name": "CACHE_INVALIDATOR",
        "class_name": "CacheInvalidator"
      }
    ]
  },

  // Queue for async processing
  "queues": {
    "producers": [
      {
        "binding": "MODULE_QUEUE",
        "queue": "module-processing"
      }
    ],
    "consumers": [
      {
        "queue": "module-processing",
        "max_batch_size": 10,
        "max_batch_timeout": 30,
        "max_retries": 3,
        "retry_delay": 60
      }
    ]
  },

  // Environment variables
  "vars": {
    "ENVIRONMENT": "production",
    "API_VERSION": "v1",
    "CORS_ORIGINS": "https://nixos.org,https://github.com",
    "MAX_SEARCH_RESULTS": "50",
    "CACHE_TTL_SECONDS": "300",
    "FTS_MIN_QUERY_LENGTH": "3"
  },

  // Secrets (set via wrangler secret)
  // wrangler secret put JWT_SECRET
  // wrangler secret put GITHUB_WEBHOOK_SECRET
  // wrangler secret put CLOUDFLARE_ACCESS_SERVICE_TOKEN

  // Migrations for Durable Objects
  "migrations": [
    {
      "tag": "v1",
      "new_sqlite_classes": ["WebSocketHandler", "CacheInvalidator"]
    }
  ],

  // Static assets for frontend
  "assets": {
    "directory": "./public/",
    "binding": "ASSETS",
    "not_found_handling": "single-page-application"
  },

  // Service bindings for microservices architecture
  "services": [
    {
      "binding": "AUTH_SERVICE",
      "service": "nixos-auth-service",
      "environment": "production"
    }
  ],

  // Deployment configuration
  "deployment": {
    "strategy": "percentage",
    "percentages": {
      "canary": 5,
      "gradual_rollout": [10, 25, 50, 75, 100]
    }
  },

  // Routes for custom domains
  "routes": [
    {
      "pattern": "api.nixos-modules.org/*",
      "zone_name": "nixos-modules.org"
    },
    {
      "pattern": "nixos-modules.org/api/*",
      "zone_name": "nixos-modules.org"
    }
  ],

  // Triggers for scheduled tasks
  "triggers": {
    "crons": [
      "0 */6 * * *",  // Every 6 hours for cache cleanup
      "0 2 * * *"     // Daily at 2 AM for backups
    ]
  },

  // Build configuration
  "build": {
    "command": "npm run build",
    "cwd": "./",
    "watch_paths": ["src/**/*.ts", "src/**/*.tsx"]
  },

  // Development settings
  "dev": {
    "ip": "0.0.0.0",
    "port": 8787,
    "local_protocol": "http",
    "upstream_protocol": "https"
  },

  // Tail consumers for real-time logs
  "tail_consumers": [
    {
      "service": "nixos-log-analyzer",
      "environment": "production"
    }
  ],

  // Browser rendering for documentation generation
  "browser": {
    "binding": "BROWSER"
  },

  // AI bindings for intelligent search
  "ai": {
    "binding": "AI"
  },

  // Vectorize for semantic search
  "vectorize": [
    {
      "binding": "VECTOR_INDEX",
      "index_name": "module-embeddings"
    }
  ],

  // Hyperdrive for database connection pooling (if using external DB)
  "hyperdrive": [
    {
      "binding": "HYPERDRIVE",
      "id": "zzzzzzzz-zzzz-zzzz-zzzz-zzzzzzzzzzzz"
    }
  ],

  // Logpush for audit logging
  "logpush": {
    "enabled": true,
    "destination": "r2://nixos-modules-logs"
  },

  // Placement hints for performance
  "placement": {
    "mode": "smart",
    "hints": ["analytics", "database"]
  },

  // Limits configuration
  "limits": {
    "cpu_ms": 50,
    "memory_mb": 128
  },

  // Node.js compatibility
  "node_compat": true,

  // Workers for Platforms (if applicable)
  "dispatch_namespaces": [
    {
      "binding": "DISPATCHER",
      "namespace": "nixos-modules",
      "outbound_worker": {
        "service": "outbound-handler",
        "environment": "production"
      }
    }
  ]
}