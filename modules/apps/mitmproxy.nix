/*
  Package: mitmproxy
  Description: Interactive, SSL/TLS-capable intercepting proxy for HTTP(S) with web and console interfaces.
  Homepage: https://mitmproxy.org/
  Documentation: https://docs.mitmproxy.org/stable/
  Repository: https://github.com/mitmproxy/mitmproxy

  Summary:
    * Provides CLI (`mitmproxy`), console (`mitmproxy`/`mitmweb`), and headless (`mitmdump`) tools for intercepting, inspecting, and modifying HTTP/S traffic.
    * Supports scripting in Python, replaying flows, TLS interception with autogenerated certificates, and integration into testing pipelines.

  Options:
    mitmproxy: Start the curses-based interactive console interface.
    mitmweb: Launch the browser-based web UI for intercepting flows.
    mitmdump: Run in headless mode suitable for scripting (`-s script.py`).
    -p <port>: Listen on a specific proxy port (default 8080).
    --mode <mode>: Configure upstream, reverse, or SOCKS modes (e.g. `--mode upstream:http://proxy:3128`).

  Example Usage:
    * `mitmproxy -p 8080 --set block_global=false` — Start the console UI and allow remote clients to connect.
    * `mitmdump -s modify_headers.py` — Run a script to modify requests/responses in headless mode.
    * `mitmweb --ssl-insecure` — Use the web dashboard to inspect traffic without verifying upstream certificates.
*/

{
  flake.nixosModules.apps.mitmproxy =
    { pkgs, ... }:
    {
      environment.systemPackages = [ pkgs.mitmproxy ];
    };

  flake.nixosModules.workstation =
    { pkgs, ... }:
    {
      environment.systemPackages = [ pkgs.mitmproxy ];
    };
}
